### Added by Zinit's installer
if [[ ! -f $HOME/.zinit/bin/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})…%f"
    command mkdir -p "$HOME/.zinit" && command chmod g-rwX "$HOME/.zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.zinit/bin" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "$HOME/.zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit
### End of Zinit's installer chunk

#==============================#
# Aliases
#==============================#
alias q="exit"
alias ls="ls --group-directories-first --color=auto"
[[ -x "`which htop`" ]] && alias top="htop"

#==============================#
# Functions
#==============================#
function chpwd { # Show file list after change directory (chpwd = native assign).
  ls -F --group-directories-first --color=auto
}
function psx() { # Grep process by name
  ps ax | grep -v grep | grep -i $1
}
function count() { # Count size in current directory
  echo $(( `ls -l | wc -l`-1 )) `du -sh $@`
}
function killgrep() { # Kill process by name
  for p in `ps -ef | grep -v grep | grep "$1" | awk 'NR>1' | awk '{ print $2 }'`; do
    echo -n "kill: `ps $p | tail -1` [Y/n]:"
    if read -q; then
      kill -s KILL "$p"
      echo ' Kill'
    else
      echo ' Abort'
    fi
  done
}

#==============================#
# Paths
#==============================#
if [[ -d "$HOME/Documents/bin" ]]; then
  export PATH="$HOME/Documents/bin:$PATH"
fi

if [[ -d "$HOME/Library/Android/sdk/platform-tools" ]]; then
  export PATH="$HOME/Library/Android/sdk/platform-tools:$PATH"
fi

if [[ -f "/opt/homebrew/share/google-cloud-sdk/path.zsh.inc" ]]; then
  source "/opt/homebrew/share/google-cloud-sdk/path.zsh.inc"
fi

if [[ -f "/opt/homebrew/share/google-cloud-sdk/completion.zsh.inc" ]]; then
  source "/opt/homebrew/share/google-cloud-sdk/completion.zsh.inc"
fi

#==============================#
# Z: Tracks your most used directories, based on 'frecency'.
#==============================#
[[ -f /usr/local/etc/profile.d/z.sh ]] && . /usr/local/etc/profile.d/z.sh
[[ -f /opt/homebrew/etc/profile.d/z.sh ]] && . /opt/homebrew/etc/profile.d/z.sh

#==============================#
# Direnv: Hook envrc file to load custom env.
#==============================#
[[ -x "$(which direnv)" ]] && eval "$(direnv hook zsh)"

#==============================#
# Homebrew: Setup environment.
#==============================#
[[ -d "/opt/homebrew" ]] && eval "$(/opt/homebrew/bin/brew shellenv)"

#==============================#
# GCloud: Optimize bandwidth with NumPy.
#==============================#
export CLOUDSDK_PYTHON_SITEPACKAGES=1

#==============================#
# Editor: Use neovim
#==============================#
export VISUAL="`which nvim`"
export EDITOR="`which nvim`"
export SUDO_EDITOR="`which nvim`"
[[ -x "`which nvim`" ]] && alias vi=nvim
[[ -x "`which nvim`" ]] && alias vim=nvim

#==============================#
# Prompt: Powerlevel10k
#==============================#
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi
zinit ice depth=1; zinit light romkatv/powerlevel10k
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

#==============================#
# Zinit: Asdf
#==============================#
zinit light asdf-vm/asdf

#==============================#
# Zinit: Plugins
#==============================#
zinit light zdharma-zmirror/z-a-submods
zinit light zsh-users/zsh-autosuggestions
zinit light zdharma-continuum/fast-syntax-highlighting
zinit light zdharma-continuum/history-search-multi-word

#==============================#
# Zinit: Prezto
#==============================#
zinit snippet PZTM::osx
zinit snippet PZTM::homebrew
zinit snippet PZTM::gnu-utility
zinit snippet PZTM::helper
zinit snippet PZTM::utility
zinit snippet PZTM::history
zinit snippet PZTM::completion
zinit snippet PZTM::directory
zstyle ':prezto:*:*' color 'yes'
zstyle ':prezto:module:utility' safe-ops 'yes'
